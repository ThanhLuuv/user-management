services:
  mysql:
    image: mysql:8.0.39
    platform: linux/amd64
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: laravel_db_user_mn
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./user-management-backend
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: laravel-backend
    ports:
      - "8000:8000"
    volumes:
      - ./user-management-backend:/var/www/html
    environment:
      APP_NAME: Laravel
      APP_ENV: local
      APP_DEBUG: true
      APP_URL: http://localhost
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel_db_user_mn
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_pass  
      RUN_SEEDER: true    
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./user-management-react
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: react-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=/backend
    ports:
      - "3000:3000"
    volumes:
      - ./user-management-react:/app
      - /app/node_modules
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    platform: linux/amd64
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./user-management-backend/public:/var/www/html/public:ro
    depends_on:
      - backend
      - frontend

volumes:
  mysql-data: